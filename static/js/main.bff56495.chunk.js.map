{"version":3,"sources":["store/actions/ApiKey.js","asset/images/spinner.gif","components/layout/Navbar.js","store/reducers/searchReducer.js","store/reducers/index.js","store/actions/types.js","store/store.js","store/actions/searchActions.js","components/home/SearchForm.js","components/layout/Spinner.js","components/home/MovieCard.js","components/home/MoviesContainer.js","components/home/Landing.js","components/home/Movie.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","APIKey","Navbar","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","I","styled","i","initialStates","text","movies","loading","movie","rootReducer","combineReducers","state","action","payload","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","setLoading","SearchForm","handleChange","e","props","searchMovie","target","value","handleSubmit","preventDefault","fetchMovies","console","log","this","onSubmit","name","onChange","placeholder","Component","mapActionToProps","dispatch","axios","get","then","res","data","catch","err","actions","connect","Spinner","src","spinner","style","width","margin","display","alt","MovieCard","Poster","Title","Year","imdbID","MoviesContainer","Response","Search","map","index","key","Error","Landing","Movie","fetchMovie","match","params","Genre","Released","Rated","Director","Writer","Actors","Plot","rel","App","exact","path","component","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.bff56495.chunk.js","sourcesContent":["module.exports={\r\n    APIKey: '8b3f987f'\r\n}","module.exports = __webpack_public_path__ + \"static/media/spinner.6d2c7103.gif\";","import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark mb-5\">\r\n        <Link to='/' className=\"navbar-brand pl-5\">\r\n          MoviesSearchGround\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav ml-auto d-flex align-items-center\"> \r\n          <li className=\"nav-item mr-4\">\r\n              <a className=\"nav-link\" href=\"/\">\r\n              <I className='fa fa-imdb'></I>\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item active mr-4\">\r\n              <a className=\"nav-link\" href=\"/\">\r\n                Home <span className=\"sr-only\">(current)</span>\r\n              </a>\r\n            </li>\r\n            \r\n            <li className=\"nav-item mr-4\">\r\n              <a className=\"nav-link\" href=\"/\">\r\n                Login\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n\r\n\r\nconst I=styled.i`\r\n  font-size:3rem;\r\n  color: yellow;\r\n`","import {\r\n    SEARCH_MOVIE, FETCH_MOVIES, FETCH_MOVIE, LOADING\r\n    } from '../actions/types';\r\n\r\nconst initialStates={\r\n    text : '',\r\n    movies: [],\r\n    loading: false,\r\n    movie: []\r\n}\r\n\r\nexport const searchReducer=(state=initialStates, action)=>{\r\n    switch(action.type){\r\n        case SEARCH_MOVIE:\r\n        return {\r\n        ...state,\r\n            text: action.payload,\r\n            loading: false\r\n        }\r\n\r\n        case FETCH_MOVIES:\r\n            return {\r\n                ...state,\r\n                movies: action.payload,\r\n                loading: false\r\n            }\r\n        case FETCH_MOVIE:\r\n            return {\r\n                ...state,\r\n                movie: action.payload,\r\n                loading: false\r\n            }\r\n        \r\n        case LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }    \r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport { combineReducers } from \"redux\"\r\nimport {searchReducer} from \"./searchReducer\"\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    movies: searchReducer\r\n}\r\n    \r\n    \r\n)","\r\nexport const SEARCH_MOVIE = 'SEARCH_MOVIE';\r\nexport const FETCH_MOVIES = 'FETCH_MOVIES';\r\nexport const FETCH_MOVIE = 'FETCH_MOVIE';\r\nexport const LOADING='LOADING';","import {createStore, applyMiddleware, compose} from 'redux';\r\n\r\nimport thunk from 'redux-thunk'; \r\nimport {rootReducer} from './reducers/index';\r\n\r\nconst initialState={};\r\n\r\nexport const store=createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(thunk),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()) \r\n    \r\n)","import {SEARCH_MOVIE, FETCH_MOVIES, FETCH_MOVIE, LOADING} from './types';\r\nimport axios from 'axios';\r\nimport {APIKey} from './ApiKey';\r\n\r\nexport const searchMovie = text =>{\r\n    return (dispatch =>{\r\n\r\n        dispatch({\r\n            type:SEARCH_MOVIE,\r\n            payload: text  \r\n        })\r\n    }\r\n        )\r\n}\r\n\r\nexport const fetchMovies= text => {\r\n    return (dispatch => {\r\n        axios.get(`http://www.omdbapi.com/?apikey=${APIKey}&s=${text}`)\r\n            .then(res => {\r\n                dispatch({\r\n                    type: FETCH_MOVIES,\r\n                    payload: res.data\r\n                })\r\n            })\r\n                .catch(err=>console.log(err)\r\n                )\r\n    })\r\n}\r\n\r\nexport const fetchMovie=id=>{\r\n    return (dispatch => {\r\n        axios.get(`http://www.omdbapi.com/?apikey=${APIKey}&i=${id}`)\r\n            .then(res=>{\r\n                dispatch({\r\n                    type: FETCH_MOVIE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err=> console.log(err)\r\n            )\r\n    })\r\n}\r\n\r\nexport const setLoading=()=>{\r\n    return ({\r\n            type: LOADING\r\n        })\r\n    \r\n}","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../store/actions/searchActions';\r\n\r\nclass SearchForm extends Component {\r\n\r\n    handleChange=(e)=>{\r\n        this.props.searchMovie(e.target.value);\r\n    }\r\n\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        this.props.fetchMovies(this.props.text);\r\n        this.props.setLoading();\r\n    }\r\n    \r\n    \r\n    render() {\r\n        console.log(this.props.movies[0]);\r\n        return (\r\n            <div className='jumbotron jumbotron-fluid mt-5 text-center'>\r\n                <div className=\"container\">\r\n                    <h1 className=\"display-4 mb-3\">\r\n                        <i className=\"fa fa-search\" />\r\n                        Search for a movie, TV Series ...\r\n                    </h1>\r\n                    <form action=\"\" id=\"searchForm\" onSubmit={this.handleSubmit}>\r\n                        <input type=\"text\" \r\n                        name='searchText'\r\n                        onChange={this.handleChange}\r\n                        className='form-control' \r\n                        placeholder='Search Movies, TV Series ...'\r\n                        />\r\n                        <button type='submit' className=\"btn btn-primary btn-lg mt-3\">\r\n                            Search\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\n    text: state.movies.text,\r\n    movies: state.movies.movies\r\n\r\n})\r\n\r\nconst mapActionToProps={\r\n    searchMovie: actions.searchMovie,\r\n    fetchMovies: actions.fetchMovies,\r\n    setLoading: actions.setLoading\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(SearchForm);","import React from 'react';\r\nimport spinner from '../../asset/images/spinner.gif'\r\n\r\nfunction Spinner() {\r\n    return (\r\n        <div>\r\n            <img \r\n                src={spinner}\r\n                style={{width: '50px', margin: 'auto', display: 'block'}}\r\n                alt='Loading...'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;\r\n","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass MovieCard extends Component {\r\n\r\n    render() {\r\n        const {movie}=this.props;\r\n        return (\r\n            <>\r\n                <div className=\"col-md-3 mb-5\">\r\n                    <div className=\"card card-body bg-dark text-center h-100\">\r\n                        <img src={movie.Poster} alt=\"Movie Cover\" className=\"w-100 mb-2\"/>\r\n                        <h5 className=\"text-light card-title\">\r\n                            {movie.Title} - {movie.Year} \r\n                        </h5>\r\n                        <Link to={'/movie/'+movie.imdbID} className=\"btn btn-primary\">\r\n                            Movie Details\r\n                            <i className=\"fa fa-chevron-right ml-4\" />\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieCard;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MovieCard from './MovieCard';\r\n\r\nclass MoviesContainer extends Component {\r\n\r\n    render() {\r\n        const {movies} =this.props;\r\n        return (\r\n            <div className='row'>\r\n                {movies.Response==='True' ? movies.Search.map((movie, index)=>\r\n                    <MovieCard key={index} movie={movie} />\r\n                ) : <h2>{movies.Error}</h2>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\n    movies:state.movies.movies,\r\n})\r\n\r\nexport default connect(mapStateToProps)(MoviesContainer);","import React, { Component } from 'react';\r\nimport SearchForm from './SearchForm';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport MoviesContainer from './MoviesContainer';\r\n \r\n\r\nclass Landing extends Component {\r\n\r\n    render() {\r\n        const {loading}=this.props;\r\n        return (\r\n            <div className='container'>\r\n                <SearchForm />\r\n                {loading ? \r\n                    <Spinner />\r\n                    : <MoviesContainer />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\n    loading: state.movies.loading\r\n})\r\n\r\nexport default connect(mapStateToProps)(Landing);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport * as actions from '../../store/actions/searchActions';\r\nimport Spinner from '../layout/Spinner';\r\n\r\n\r\nclass Movie extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.fetchMovie(this.props.match.params.id);\r\n        this.props.setLoading();\r\n    }\r\n\r\n    render() {\r\n        const {loading, movie} = this.props;\r\n        return (\r\n            <>\r\n            {loading ? <Spinner /> :\r\n            ( \r\n                <div className='container'>\r\n                <div className='row'>\r\n                <div className=\"col-md-4 card card-body\">\r\n                    <img src={movie.Poster} alt=\"Poster\" className=\"thumbnail\"/>\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                    <h2 className=\"mb-4\">{movie.Title}</h2>\r\n                    <ul className=\"list-group\">\r\n                        <li className=\"list-group-item\">\r\n                            <strong>Genre: </strong> {movie.Genre}\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <strong>Released: </strong> {movie.Released}\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <strong>IDBM Rating: </strong> {movie.Rated}\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <strong>Director: </strong> {movie.Director}\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <strong>Writer: </strong> {movie.Writer}\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <strong>Actors: </strong> {movie.Actors}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div className='row'>\r\n                <div className=\"card card-body bg-dark my-5 text-light\">\r\n                    <div className=\"col-md-12\">\r\n                        <h3>About</h3>\r\n                        {movie.Plot}\r\n                        <hr/>\r\n                        <a href={\"https://www.imdb.com/title/\"+movie.imdbID} target='_blank' rel=\"noopener noreferrer\" className=\"btn btn-primary\">\r\n                            View on IMDB\r\n                        </a>\r\n                        <Link to=\"/\" className=\"btn btn-default text-light\">\r\n                            Go Back To Search\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        ) \r\n        }\r\n         </>   \r\n        )\r\n    }\r\n}\r\n\r\nconst mapActionToProps={\r\n    fetchMovie: actions.fetchMovie,\r\n    setLoading: actions.setLoading\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\n    loading: state.movies.loading,\r\n    movie: state.movies.movie\r\n})\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(Movie);\r\n","import React from 'react';\nimport Navbar from './components/layout/Navbar';\nimport {Provider} from 'react-redux';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport { store } from './store/store';\nimport Landing from './components/home/Landing';\nimport Movie from './components/home/Movie';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <>\n        <Navbar />\n        \n        <Route exact path='/' component={Landing} />\n        <Route path='/movie/:id' component={Movie} />\n        </>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}